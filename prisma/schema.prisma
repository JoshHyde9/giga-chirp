// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  email    String  @unique
  username String  @unique
  password String 

  name     String
  imageUrl String? @default("https://cdn-icons-png.flaticon.com/512/10412/10412528.png")
  bio      String?

  posts Post[]
  likes Like[]
  followers Follow[] @relation("UserFollowers")
  following Follow[] @relation("UserFollowing")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([username, name])
}

model Post {
  id String @id @default(cuid())

  content String
  mediaUrl String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  replies  Post[]  @relation("RepliesTo")
  parent   Post?   @relation("RepliesTo", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?

  likes Like[] @relation("PostLikes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  post   Post   @relation("PostLikes", fields: [postId], references: [id], onDelete: Cascade)
  postId String

  @@index([userId, postId])
}

model Follow {
  id String @id @default(cuid())

  followerId String
  followingId String

  user User @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)

  @@index([followerId, followingId])
}
